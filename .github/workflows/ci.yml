name: CI

on:
  push:
    branches: [ main, ci/** ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend • Tests & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install black isort flake8

      - name: Run tests
        working-directory: backend
        run: pytest -q

      - name: Lint (black)
        run: black --check backend/src backend/tests

      - name: Check import sorting
  id: isort-check
  run: |
    if ! isort --profile black --check-only backend; then
      echo "need_fix=true" >> $GITHUB_OUTPUT
      exit 1
    fi
  continue-on-error: true

      - name: Show import differences
        if: steps.isort-check.outputs.need_fix == 'true'
          run: |
        echo "::group::Import sorting differences"
        isort --profile black --diff backend
        echo "::endgroup::"
        echo "::error::Please run 'isort --profile black backend' locally to fix import sorting"
        continue-on-error: true

      - name: Lint (flake8)
        run: flake8 backend/src backend/tests

  backend-docker-build:
    name: Backend • Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: docker build -t chrona-backend:ci ./backend

  frontend-checks:
    name: Frontend • Build (matrix)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [ backoffice, kiosk ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build app (if present)
        shell: bash
        run: |
          APP="${{ matrix.app }}"
          if [ -f "apps/$APP/package.json" ]; then
            cd "apps/$APP"
            npm ci
            npm run -s build || npm run -s dev -- --version || echo "No build script; dev only"
          else
            echo "No package.json in apps/$APP — skipping"
          fi
