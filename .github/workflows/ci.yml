name: CI

on:
  push:
    branches: [ main, ci/** ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend • Tests & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install black isort flake8

      - name: Debug specific test (verbose)
        working-directory: backend
        env:
          PYTHONPATH: .
        run: pytest -vv -k test_admin_ping_requires_admin
        continue-on-error: true

      - name: Run tests with coverage
        working-directory: backend
        env:
          PYTHONPATH: .
        run: pytest -q --cov=src --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: backend/coverage.xml
          if-no-files-found: warn

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          files: backend/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend
          fail_ci_if_error: false

      - name: Lint (black)
        run: black --check backend/src backend/tests

      - name: Check import sorting
        id: isort-check
        run: |
          if ! isort --profile black --check-only backend; then
            echo "need_fix=true" >> $GITHUB_OUTPUT
            exit 1
          fi
        continue-on-error: true

      - name: Lint (flake8)
        run: flake8 backend/src backend/tests

  backend-docker-build:
    name: Backend • Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: docker build -t chrona-backend:ci ./backend

  frontend-checks:
    name: Frontend • Build (matrix)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [ backoffice, kiosk ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (only if app exists)
        uses: actions/setup-node@v4
        if: ${{ hashFiles(format('apps/{0}/package.json', matrix.app)) != '' }}
        with:
          node-version: '20'

      - name: Build app (if present)
        shell: bash
        if: ${{ hashFiles(format('apps/{0}/package.json', matrix.app)) != '' }}
        run: |
          APP="${{ matrix.app }}"
          if [ -f "apps/$APP/package.json" ]; then
            cd "apps/$APP"
            npm ci
            npm run -s build || npm run -s dev -- --version || echo "No build script; dev only"
          else
            echo "No package.json in apps/$APP — skipping"
          fi

      - name: Skip notice
        if: ${{ hashFiles(format('apps/{0}/package.json', matrix.app)) == '' }}
        run: echo "Skipping ${{ matrix.app }} — no package.json present"
